// Generated by psc version 0.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (_28) {
        return function (_29) {
            return _28;
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _676 = compare(__dict_Ord_11)(a1)(a2);
                if (_676 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "==": $eq$eq, 
        "-": $minus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        pure: pure, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        numNumber: numNumber, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        boolLikeBoolean: boolLikeBoolean
    };
})();
var PS = PS || {};
PS.Thermite_Html = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function text(s) {
    return s;
  }
  ;
    
  function createElement(name) {
    return function(ps) {
      return function(children) {
        var props = {};

        for (var i = 0; i < ps.length; i++) {
          var p = ps[i];
          props[p[0]] = p[1];
        }

        return React.createElement(name, props, children);
      };
    };
  }
  ;
    return {
        text: text, 
        createElement: createElement
    };
})();
var PS = PS || {};
PS.Thermite_Html_Attributes = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Html = PS.Thermite_Html;
    
  function attribute(attr) {
    return function(value) {
      return [attr, value];
    };
  }   
  ;
    var value = attribute("value");
    var title = attribute("title");
    var placeholder = attribute("placeholder");
    var href = attribute("href");
    var className = attribute("className");
    var checked = attribute("checked");
    var _type = attribute("type");
    return {
        value: value, 
        _type: _type, 
        title: title, 
        placeholder: placeholder, 
        href: href, 
        className: className, 
        checked: checked, 
        attribute: attribute
    };
})();
var PS = PS || {};
PS.Thermite_Html_Elements = (function () {
    "use strict";
    var Thermite_Html = PS.Thermite_Html;
    var Prelude = PS.Prelude;
    var ul = Thermite_Html.createElement("ul");
    var span = Thermite_Html.createElement("span");
    var li = Thermite_Html.createElement("li");
    var li$prime = li([  ]);
    var input = Thermite_Html.createElement("input");
    var h1 = Thermite_Html.createElement("h1");
    var div = Thermite_Html.createElement("div");
    var button = Thermite_Html.createElement("button");
    var a = Thermite_Html.createElement("a");
    return {
        ul: ul, 
        span: span, 
        "li'": li$prime, 
        li: li, 
        input: input, 
        h1: h1, 
        div: div, 
        button: button, 
        a: a
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = new Profunctor(function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
            };
        };
    });
    var dimap = function (dict) {
        return dict.dimap;
    };
    var rmap = function (__dict_Profunctor_17) {
        return function (b2c) {
            return dimap(__dict_Profunctor_17)(Prelude.id(Prelude.categoryArr))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Thermite_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Action = function (x) {
        return x;
    };
    var action = function (act) {
        return function (s) {
            return function (k) {
                return act(s)(function (a) {
                    return function (s1) {
                        return k({
                            state: s1, 
                            value: a
                        });
                    };
                });
            };
        };
    };
    var modifyState = function (f) {
        return action(function (s) {
            return function (k) {
                return k(Prelude.unit)(f(s));
            };
        });
    };
    return {
        modifyState: modifyState, 
        action: action
    };
})();
var PS = PS || {};
PS.Thermite = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Action = PS.Thermite_Action;
    
  function createClassImpl(spec) {
    return React.createClass({
      getInitialState: function() {
        return spec.initialState;
      },
      performAction: function(action) {
        var self = this;
        spec.performAction(self.props)(action)(self.state)(function(o) {
          return function() {
            self.setState(o.state);
          };
        })();
      },
      render: function() {
        return spec.render(this)(this.state)(this.props);
      }
    }); 
  }
  ;
    
  function render(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), document.body);
      };
    };
  }
  ;
    var Spec = function (x) {
        return x;
    };
    var createClass = function (_70) {
        return createClassImpl(_70);
    };
    return {
        Spec: Spec, 
        render: render, 
        createClass: createClass
    };
})();
var PS = PS || {};
PS.Thermite_Events = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite = PS.Thermite;
    var Thermite_Html = PS.Thermite_Html;
    
  function event(name) {
    return function onClick(context) {
      return function(f) {
        return [name, function(e) {
          context.performAction(f(e));
        }];
      };
    };
  }
  ;
    var onKeyUp = event("onKeyUp");
    var onClick = event("onClick");
    var onChange = event("onChange");
    return {
        onClick: onClick, 
        onChange: onChange, 
        onKeyUp: onKeyUp, 
        event: event
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    return {
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        deleteAt: deleteAt, 
        append: append, 
        length: length, 
        map: map, 
        functorArray: functorArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var snd = function (_201) {
        return _201.value1;
    };
    var fst = function (_200) {
        return _200.value0;
    };
    return {
        Tuple: Tuple, 
        zip: zip, 
        snd: snd, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Lazy = PS.Control_Lazy;
    var StateT = function (x) {
        return x;
    };
    var runStateT = function (_258) {
        return _258;
    };
    var monadStateT = function (__dict_Monad_186) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_186);
        }, function () {
            return bindStateT(__dict_Monad_186);
        });
    };
    var functorStateT = function (__dict_Monad_190) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_190)));
    };
    var bindStateT = function (__dict_Monad_193) {
        return new Prelude.Bind(function (_259) {
            return function (_260) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_193["__superclass_Prelude.Bind_1"]())(_259(s))(function (_13) {
                        return runStateT(_260(_13.value0))(_13.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_193);
        });
    };
    var applyStateT = function (__dict_Monad_194) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_194)), function () {
            return functorStateT(__dict_Monad_194);
        });
    };
    var applicativeStateT = function (__dict_Monad_195) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_195);
        }, function (a) {
            return StateT(function (s) {
                return Prelude["return"](__dict_Monad_195)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    return {
        StateT: StateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var runIdentity = function (_515) {
        return _515;
    };
    var functorIdentity = new Prelude.Functor(function (_521) {
        return function (_522) {
            return _521(_522);
        };
    });
    var applyIdentity = new Prelude.Apply(function (_523) {
        return function (_524) {
            return _523(_524);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadState = function (state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var monadStateStateT = function (__dict_Monad_466) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_466))(f));
        });
    };
    var modify = function (__dict_Monad_476) {
        return function (__dict_MonadState_477) {
            return function (f) {
                return state(__dict_MonadState_477)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        state: state, 
        monadStateStateT: monadStateStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    return {
        execState: execState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Optic_Monad = (function () {
    "use strict";
    var Control_Monad_State = PS.Control_Monad_State;
    var Prelude = PS.Prelude;
    var $hash$tilde = function (s) {
        return function (sa) {
            return Control_Monad_State.execState(sa)(s);
        };
    };
    return {
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Optic_Index_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_StrMap = PS.Data_StrMap;
    var IndexKey = {};
    var IndexValue = {};
    var indexValueArray = IndexValue;
    var indexKeyArray = IndexKey;
    return {
        IndexValue: IndexValue, 
        IndexKey: IndexKey, 
        indexKeyArray: indexKeyArray, 
        indexValueArray: indexValueArray
    };
})();
var PS = PS || {};
PS.Optic_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Index = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
        this.ix = ix;
    };
    var ix = function (dict) {
        return dict.ix;
    };
    var indexArray = new Index(function () {
        return Optic_Index_Class.indexKeyArray;
    }, function () {
        return Optic_Index_Class.indexValueArray;
    }, function (_646) {
        return function (__dict_Applicative_622) {
            return function (_647) {
                return function (_648) {
                    if (_646 < 0) {
                        return Prelude.pure(__dict_Applicative_622)(_648);
                    };
                    if (_648.length === 0) {
                        return Prelude.pure(__dict_Applicative_622)([  ]);
                    };
                    if (_646 === 0 && _648.length >= 1) {
                        var _701 = _648.slice(1);
                        return Prelude["<#>"]((__dict_Applicative_622["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(_647(_648[0]))(function (a$prime) {
                            return Prelude[":"](a$prime)(_701);
                        });
                    };
                    if (_648.length >= 1) {
                        var _703 = _648.slice(1);
                        return Prelude["<$>"]((__dict_Applicative_622["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_648[0]))(ix(indexArray)(_646 - 1)(__dict_Applicative_622)(_647)(_703));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    return {
        Index: Index, 
        ix: ix, 
        indexArray: indexArray
    };
})();
var PS = PS || {};
PS.Optic_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Contravariant = PS.Data_Contravariant;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    var over = function (__dict_Profunctor_666) {
        return function (pstab) {
            return function (pab) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_666)(Data_Identity.Identity)(pab)));
            };
        };
    };
    var $plus$plus$tilde = function (__dict_Semigroup_670) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude["++"](__dict_Semigroup_670)(a));
            };
        };
    };
    return {
        set: set, 
        over: over, 
        "++~": $plus$plus$tilde, 
        ".~": $dot$tilde
    };
})();
var PS = PS || {};
PS.Optic_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Getter = PS.Optic_Getter;
    var Optic_Lens = PS.Optic_Lens;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Types = PS.Optic_Types;
    var $dot$tilde = Optic_Setter[".~"];
    var $dot$dot = Prelude["<<<"];
    return {
        ".~": $dot$tilde, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Monad_Setter = (function () {
    "use strict";
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Optic_Setter = PS.Optic_Setter;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var $dot$eq = function (__dict_Monad_693) {
        return function (__dict_MonadState_694) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_693)(__dict_MonadState_694)(Optic_Setter[".~"](ssab)(b));
                };
            };
        };
    };
    var $plus$plus$eq = function (__dict_Monad_701) {
        return function (__dict_MonadState_702) {
            return function (__dict_Semigroup_703) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_701)(__dict_MonadState_702)(Optic_Setter["++~"](__dict_Semigroup_703)(ssab)(b));
                    };
                };
            };
        };
    };
    return {
        "++=": $plus$plus$eq, 
        ".=": $dot$eq
    };
})();
var PS = PS || {};
PS.Optic_Extended = (function () {
    "use strict";
    var Optic_Equality = PS.Optic_Equality;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Iso = PS.Optic_Iso;
    var Optic_Monad = PS.Optic_Monad;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Monad_Setter = PS.Optic_Monad_Setter;
    var Optic_Review = PS.Optic_Review;
    var Optic_Traversal = PS.Optic_Traversal;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var $dot$eq = Optic_Monad_Setter[".="];
    var $plus$plus$eq = Optic_Monad_Setter["++="];
    var $hash$tilde = Optic_Monad["#~"];
    return {
        "++=": $plus$plus$eq, 
        ".=": $dot$eq, 
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Html_Elements = PS.Thermite_Html_Elements;
    var Thermite_Html_Attributes = PS.Thermite_Html_Attributes;
    var Thermite_Html = PS.Thermite_Html;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Thermite_Events = PS.Thermite_Events;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Index = PS.Optic_Index;
    var Thermite_Action = PS.Thermite_Action;
    var Thermite = PS.Thermite;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Profunctor = PS.Data_Profunctor;
    function getValue(e) {  return e.target.value;};
    function getChecked(e) {  return e.target.checked;};
    function getKeyCode(e) {  return e.keyCode;};
    var Item = (function () {
        function Item(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Item.create = function (value0) {
            return function (value1) {
                return new Item(value0, value1);
            };
        };
        return Item;
    })();
    var All = (function () {
        function All() {

        };
        All.value = new All();
        return All;
    })();
    var Active = (function () {
        function Active() {

        };
        Active.value = new Active();
        return Active;
    })();
    var Completed = (function () {
        function Completed() {

        };
        Completed.value = new Completed();
        return Completed;
    })();
    var State = (function () {
        function State(value0) {
            this.value0 = value0;
        };
        State.create = function (value0) {
            return new State(value0);
        };
        return State;
    })();
    var NewItem = (function () {
        function NewItem(value0) {
            this.value0 = value0;
        };
        NewItem.create = function (value0) {
            return new NewItem(value0);
        };
        return NewItem;
    })();
    var RemoveItem = (function () {
        function RemoveItem(value0) {
            this.value0 = value0;
        };
        RemoveItem.create = function (value0) {
            return new RemoveItem(value0);
        };
        return RemoveItem;
    })();
    var SetEditText = (function () {
        function SetEditText(value0) {
            this.value0 = value0;
        };
        SetEditText.create = function (value0) {
            return new SetEditText(value0);
        };
        return SetEditText;
    })();
    var SetCompleted = (function () {
        function SetCompleted(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetCompleted.create = function (value0) {
            return function (value1) {
                return new SetCompleted(value0, value1);
            };
        };
        return SetCompleted;
    })();
    var SetFilter = (function () {
        function SetFilter(value0) {
            this.value0 = value0;
        };
        SetFilter.create = function (value0) {
            return new SetFilter(value0);
        };
        return SetFilter;
    })();
    var DoNothing = (function () {
        function DoNothing() {

        };
        DoNothing.value = new DoNothing();
        return DoNothing;
    })();
    var showFilter = function (_657) {
        if (_657 instanceof All) {
            return "All";
        };
        if (_657 instanceof Active) {
            return "Active";
        };
        if (_657 instanceof Completed) {
            return "Completed";
        };
        throw new Error("Failed pattern match");
    };
    var items = function (__dict_Functor_715) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_715)(f(st.items))(function (i) {
                    var _705 = {};
                    for (var _706 in st) {
                        if (st.hasOwnProperty(_706)) {
                            _705[_706] = st[_706];
                        };
                    };
                    _705.items = i;
                    return _705;
                });
            };
        };
    };
    var itemBoolean = function (__dict_Functor_716) {
        return function (_660) {
            return function (_661) {
                return Prelude["<$>"](__dict_Functor_716)(Item.create(_661.value0))(_660(_661.value1));
            };
        };
    };
    var initialState = new State({
        items: [  ], 
        editText: "", 
        filter: All.value
    });
    var handleKeyPress = function (e) {
        var _711 = getKeyCode(e);
        if (_711 === 13) {
            return NewItem.create(getValue(e));
        };
        if (_711 === 27) {
            return new SetEditText("");
        };
        return DoNothing.value;
    };
    var handleCheckEvent = function (index) {
        return function (e) {
            return new SetCompleted(index, getChecked(e));
        };
    };
    var handleChangeEvent = function (e) {
        return new SetEditText(getValue(e));
    };
    var filter_ = function (__dict_Functor_717) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_717)(f(st.filter))(function (i) {
                    var _712 = {};
                    for (var _713 in st) {
                        if (st.hasOwnProperty(_713)) {
                            _712[_713] = st[_713];
                        };
                    };
                    _712.filter = i;
                    return _712;
                });
            };
        };
    };
    var eqFilter = new Prelude.Eq(function (x) {
        return function (y) {
            return !Prelude["=="](eqFilter)(x)(y);
        };
    }, function (_669) {
        return function (_670) {
            if (_669 instanceof All && _670 instanceof All) {
                return true;
            };
            if (_669 instanceof Active && _670 instanceof Active) {
                return true;
            };
            if (_669 instanceof Completed && _670 instanceof Completed) {
                return true;
            };
            return false;
        };
    });
    var editText = function (__dict_Functor_718) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_718)(f(st.editText))(function (i) {
                    var _716 = {};
                    for (var _717 in st) {
                        if (st.hasOwnProperty(_717)) {
                            _716[_717] = st[_717];
                        };
                    };
                    _716.editText = i;
                    return _716;
                });
            };
        };
    };
    var applyFilter = function (_662) {
        return function (_663) {
            if (_662 instanceof All) {
                return true;
            };
            if (_662 instanceof Active) {
                return !_663.value1;
            };
            if (_662 instanceof Completed) {
                return _663.value1;
            };
            throw new Error("Failed pattern match");
        };
    };
    var render = function (_664) {
        return function (_665) {
            return function (_666) {
                var title = Thermite_Html_Elements.h1([ Thermite_Html_Attributes.className("title") ])([ Thermite_Html.text("todos") ]);
                var newItem = Thermite_Html_Elements.li([ Thermite_Html_Attributes.className("newItem") ])([ Thermite_Html_Elements.input([ Thermite_Html_Attributes.placeholder("Create a new task"), Thermite_Html_Attributes.value(_665.value0.editText), Thermite_Events.onKeyUp(_664)(handleKeyPress), Thermite_Events.onChange(_664)(handleChangeEvent) ])([  ]) ]);
                var item = function (_671) {
                    return Thermite_Html_Elements["li'"]([ Thermite_Html_Elements.input([ Thermite_Html_Attributes._type("checkbox"), Thermite_Html_Attributes.className("completed"), Thermite_Html_Attributes.checked((function () {
                        if (_671.value0.value1) {
                            return "checked";
                        };
                        if (!_671.value0.value1) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })()), Thermite_Html_Attributes.title("Mark as completed"), Thermite_Events.onChange(_664)(handleCheckEvent(_671.value1)) ])([  ]), Thermite_Html_Elements.span([ Thermite_Html_Attributes.className("description") ])([ Thermite_Html.text(_671.value0.value0) ]), Thermite_Html_Elements.button([ Thermite_Html_Attributes.className("complete"), Thermite_Html_Attributes.title("Remove item"), Thermite_Events.onClick(_664)(function (_) {
                        return new RemoveItem(_671.value1);
                    }) ])([ Thermite_Html.text("\u2716") ]) ]);
                };
                var items_1 = Thermite_Html_Elements.ul([ Thermite_Html_Attributes.className("items") ])(Prelude[":"](newItem)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.map(item))(Data_Array.filter(Prelude["<<<"](Prelude.semigroupoidArr)(applyFilter(_665.value0.filter))(Data_Tuple.fst)))(Data_Tuple.zip(_665.value0.items)(Data_Array.range(0)(Data_Array.length(_665.value0.items))))));
                var filter__1 = function (f) {
                    return Thermite_Html_Elements.li([  ])([ Thermite_Html_Elements.a([ Thermite_Html_Attributes.href("#"), Thermite_Html_Attributes.className((function () {
                        var _733 = Prelude["=="](eqFilter)(f)(_665.value0.filter);
                        if (_733) {
                            return "selected";
                        };
                        if (!_733) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })()), Thermite_Events.onClick(_664)(function (_) {
                        return new SetFilter(f);
                    }) ])([ Thermite_Html.text(showFilter(f)) ]) ]);
                };
                var filters = Thermite_Html_Elements.ul([ Thermite_Html_Attributes.className("filters") ])(Prelude["<$>"](Data_Array.functorArray)(filter__1)([ All.value, Active.value, Completed.value ]));
                return Thermite_Html_Elements.div([ Thermite_Html_Attributes.className("body") ])([ title, items_1, filters ]);
            };
        };
    };
    var _State = function (__dict_Functor_719) {
        return function (_658) {
            return function (_659) {
                return Prelude["<$>"](__dict_Functor_719)(State.create)(_658(_659.value0));
            };
        };
    };
    var performAction = function (_667) {
        return function (_668) {
            var updateState = function (_672) {
                if (_672 instanceof NewItem) {
                    return function (st) {
                        return Optic_Extended["#~"](st)(Prelude[">>="](Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Optic_Extended["++="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Data_Array.semigroupArray)(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))([ new Item(_672.value0, false) ]))(function () {
                            return Optic_Extended[".="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))("");
                        }));
                    };
                };
                if (_672 instanceof RemoveItem) {
                    return Optic_Setter.over(Data_Profunctor.profunctorArr)(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))(Data_Array.deleteAt(_672.value0)(1));
                };
                if (_672 instanceof SetEditText) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))(_672.value0);
                };
                if (_672 instanceof SetCompleted) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(items(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(_672.value0)(Data_Identity.applicativeIdentity))(itemBoolean(Data_Identity.functorIdentity)))))(_672.value1);
                };
                if (_672 instanceof SetFilter) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(filter_(Data_Identity.functorIdentity)))(_672.value0);
                };
                if (_672 instanceof DoNothing) {
                    return Prelude.id(Prelude.categoryArr);
                };
                throw new Error("Failed pattern match");
            };
            return Thermite_Action.modifyState(updateState(_668));
        };
    };
    var spec = {
        initialState: initialState, 
        performAction: performAction, 
        render: render
    };
    var main = (function () {
        var component = Thermite.createClass(spec);
        return Thermite.render(component)({});
    })();
    return {
        main: main
    };
})();
PS.Main.main();
